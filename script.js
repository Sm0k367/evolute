// Global variables for generated content (will be updated by the "generate" function)
let latestGeneratedVideoUrl = "https://www.youtube.com/embed/dQw4w9WgXcQ"; // Default demo video URL (Rick Astley for now!)
let latestGeneratedContentTitle = "My Epic Tech AI Vision";
let latestGeneratedContentDescription = "Check out this amazing content generated by Epic Tech AI!";
let pageShareUrl = window.location.href; // The URL of your website for social sharing

// Neural Network Animation
function createNeuralNetwork() {
    const network = document.getElementById('neuralNetwork');
    if (!network) return; // Exit if element not found

    const nodeCount = 50;
    network.innerHTML = ''; // Clear existing nodes if any

    for (let i = 0; i < nodeCount; i++) {
        const node = document.createElement('div');
        node.className = 'neural-node';
        node.style.left = Math.random() * 100 + '%';
        node.style.top = Math.random() * 100 + '%';
        node.style.animationDelay = Math.random() * 3 + 's';
        network.appendChild(node);
    }
}

// Live Stats Counter Animation
function animateStats() {
    const stats = {
        creationsCount: { element: document.getElementById('creationsCount'), target: 47293, current: 45000 },
        videosGenerated: { element: document.getElementById('videosGenerated'), target: 12700, current: 12000 },
        totalViews: { element: document.getElementById('totalViews'), target: 2400000, current: 2300000 },
        viralContent: { element: document.getElementById('viralContent'), target: 847, current: 820 },
        activeCreators: { element: document.getElementById('activeCreators'), target: 15200, current: 14800 }
    };

    Object.values(stats).forEach(stat => {
        if (!stat.element) return; // Skip if element not found

        const increment = (stat.target - stat.current) / 100;
        const timer = setInterval(() => {
            stat.current += increment;
            if (stat.current >= stat.target) {
                stat.current = stat.target;
                clearInterval(timer);
            }

            let displayValue = Math.floor(stat.current);
            if (stat.target >= 1000000) { // For millions
                displayValue = (displayValue / 1000000).toFixed(1) + 'M';
            } else if (stat.target >= 1000) { // For thousands
                displayValue = (displayValue / 1000).toFixed(1) + 'K';
            }

            stat.element.textContent = displayValue;
        }, 50);
    });
}

// Video Interaction - Play Button for Demo Video
document.getElementById('playButton')?.addEventListener('click', function() {
    const videoContainer = document.getElementById('videoContainer');
    const videoControls = document.getElementById('videoControls');

    if (!videoContainer || !videoControls) return;

    // Load a demo video (replace with your actual demo video ID if you have one, or keep Rick Astley for fun!)
    videoContainer.innerHTML = `
        <iframe width="100%" height="auto" src="https://www.youtube.com/embed/dQw4w9WgXcQ?autoplay=1"
            frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen loading="lazy"></iframe>
    `;

    videoControls.style.display = 'block';
    videoControls.scrollIntoView({ behavior: 'smooth' });
});

// Generate Button Functionality
document.getElementById('generateBtn')?.addEventListener('click', function() {
    const promptInput = document.getElementById('promptInput');
    const prompt = promptInput?.value;

    if (!prompt || !prompt.trim()) {
        alert('Please describe your creative vision first!');
        return;
    }

    const generateBtn = this;
    const originalBtnText = generateBtn.innerHTML;
    const generatedContentShare = document.getElementById('generatedContentShare');
    const videoContainer = document.getElementById('videoContainer');

    if (!generatedContentShare || !videoContainer) return;

    generateBtn.innerHTML = 'ðŸ”„ MANIFESTING...';
    generateBtn.disabled = true;
    generatedContentShare.style.display = 'none'; // Hide share options during generation

    // Simulate generation process (replace with actual API call to your backend AI)
    setTimeout(() => {
        // In a real application, this would receive the actual generated content URL and details
        // For demo, we'll just update the placeholder variables for sharing with dynamic data
        const simulatedVideoId = 'tgbNymZ7vqY'; // Example YouTube video ID for simulation
        latestGeneratedVideoUrl = `https://www.youtube.com/embed/${simulatedVideoId}?autoplay=1`;
        latestGeneratedContentTitle = `AI Vision: "${prompt.substring(0, Math.min(prompt.length, 50))}..." by Epic Tech AI`;
        latestGeneratedContentDescription = `Generated instantly by Epic Tech AI: "${prompt}" - Experience the future of creativity!`;

        // Update the video player with the "generated" content
        videoContainer.innerHTML = `
            <iframe width="100%" height="auto" src="${latestGeneratedVideoUrl}"
                frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen loading="lazy"></iframe>
        `;

        generateBtn.innerHTML = 'âœ¨ VISION MANIFESTED!';
        createShareExplosion(); // Visual feedback for completion

        // Show share buttons for the *generated* content
        generatedContentShare.style.display = 'block';

        // Reset button text after a short delay
        setTimeout(() => {
            generateBtn.innerHTML = originalBtnText;
            generateBtn.disabled = false;
        }, 2000); // 2 seconds after manifest text
    }, 3000); // Simulate 3 seconds of generation time
});

// Viral Badge Interaction (Share the website itself)
document.getElementById('viralBadge')?.addEventListener('click', function() {
    createShareExplosion();
    shareWebsite();
});

// Function: Share the Website
function shareWebsite() {
    const shareData = {
        title: document.title,
        text: document.querySelector('meta[name="description"]')?.content || document.title,
        url: pageShareUrl
    };

    if (navigator.share) {
        navigator.share(shareData).catch((error) => console.log('Error sharing website:', error));
    } else {
        // Fallback for browsers without Web Share API (e.g., open Twitter web intent)
        const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareData.text)}&url=${encodeURIComponent(shareData.url)}&via=EpicTechAI`;
        window.open(twitterUrl, '_blank');
    }
}

// Event Listeners for new social share buttons (for generated content)
document.addEventListener('DOMContentLoaded', () => {
    // Social share buttons for generated content
    document.querySelectorAll('.share-buttons button').forEach(button => {
        button.addEventListener('click', function() {
            if (this.classList.contains('twitter-share-btn')) {
                const twitterText = encodeURIComponent(latestGeneratedContentDescription + " #EpicTechAI");
                window.open(`https://twitter.com/intent/tweet?text=${twitterText}&url=${encodeURIComponent(latestGeneratedVideoUrl)}&via=EpicTechAI`, '_blank');
            } else if (this.classList.contains('facebook-share-btn')) {
                window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(latestGeneratedVideoUrl)}&quote=${encodeURIComponent(latestGeneratedContentDescription)}`, '_blank');
            } else if (this.classList.contains('linkedin-share-btn')) {
                window.open(`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(latestGeneratedVideoUrl)}&title=${encodeURIComponent(latestGeneratedContentTitle)}&summary=${encodeURIComponent(latestGeneratedContentDescription)}`, '_blank');
            } else if (this.classList.contains('copy-link-btn')) {
                navigator.clipboard.writeText(latestGeneratedVideoUrl)
                    .then(() => alert('Link copied to clipboard!'))
                    .catch(err => console.error('Failed to copy link: ', err));
            }
        });
    });
});

// Share Explosion Effect
function createShareExplosion() {
    const explosion = document.getElementById('shareExplosion');
    if (!explosion) return;

    explosion.innerHTML = ''; // Clear existing particles

    for (let i = 0; i < 12; i++) {
        const particle = document.createElement('div');
        particle.className = 'share-particle';

        const angle = (i / 12) * Math.PI * 2;
        const distance = 100 + Math.random() * 50; // Pixels distance from center
        const x = Math.cos(angle) * distance;
        const y = Math.sin(angle) * distance;

        particle.style.setProperty('--x', x + 'px');
        particle.style.setProperty('--y', y + 'px');
        particle.style.animationDelay = Math.random() * 0.2 + 's';

        explosion.appendChild(particle);
    }

    setTimeout(() => {
        explosion.innerHTML = ''; // Clear particles after animation
    }, 1000);
}

// Smooth Scrolling for internal links
document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
            target.scrollIntoView({
                behavior: 'smooth',
                block: 'start'
            });
        }
    });
});

// Scroll Animations (Fade In Up) using Intersection Observer
const observerOptions = {
    threshold: 0.1, // Element is 10% visible
    rootMargin: '0px 0px -50px 0px' // Start animation 50px before element enters viewport bottom
};

const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
        if (entry.isIntersecting) {
            entry.target.classList.add('fade-in-up');
            observer.unobserve(entry.target); // Stop observing once animated
        }
    });
}, observerOptions);

// Observe all elements with the 'loading' class
document.querySelectorAll('.loading').forEach(el => {
    observer.observe(el);
});

// Initialize on DOMContentLoaded
document.addEventListener('DOMContentLoaded', function() {
    createNeuralNetwork(); // Start background animation

    setTimeout(() => {
        animateStats(); // Animate initial stats
    }, 1000);

    // Add continuous dynamic behavior to creations count
    setInterval(() => {
        const creationsCountElement = document.getElementById('creationsCount');
        if (creationsCountElement) {
            let current = parseInt(creationsCountElement.textContent.replace(/[^\d]/g, ''));
            current += Math.floor(Math.random() * 3) + 1; // Increment by 1-3
            creationsCountElement.textContent = current.toLocaleString();
        }
    }, 5000); // Update every 5 seconds

    // Set initial display states for video interface elements
    document.getElementById('videoControls')?.style.display = 'none';
    document.getElementById('generatedContentShare')?.style.display = 'none';

    // Optional: Auto-play the demo video on page load for strong first impression
    // document.getElementById('playButton')?.click();
});

// Easter Egg: Konami Code
let konamiCode = [];
const konamiSequence = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight', 'KeyB', 'KeyA'];

document.addEventListener('keydown', function(e) {
    konamiCode.push(e.code);
    if (konamiCode.length > konamiSequence.length) {
        konamiCode.shift(); // Keep array length same as sequence
    }

    if (JSON.stringify(konamiCode) === JSON.stringify(konamiSequence)) {
        // Konami Code entered! Trigger a fun effect.
        document.body.style.filter = 'hue-rotate(180deg)'; // Example: change hue
        createShareExplosion(); // Example: particles
        console.log("Konami Code Activated! Welcome to the Matrix.");

        // Revert effect after a few seconds
        setTimeout(() => {
            document.body.style.filter = '';
            konamiCode = []; // Reset code after activation
        }, 3000);
    }
});
